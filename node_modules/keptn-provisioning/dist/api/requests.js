"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.sendRequest = void 0;
const node_fetch_1 = __importDefault(require("node-fetch"));
async function sendRequest(scheme, auth, request, body = '') {
    const requestInfo = scheme.resources[request];
    const keptnURL = new URL(auth.keptnURL);
    keptnURL.pathname = `/${scheme.baseURL}/${requestInfo.url}`;
    const url = keptnURL.href;
    const headers = {
        'Content-Type': 'application/json',
        accept: 'application/json',
        'x-token': auth.token,
    };
    console.log(`KEPNT: Info. Send request to URL: ${url}`);
    try {
        const response = await (0, node_fetch_1.default)(url, body
            ? {
                method: requestInfo.method,
                headers: headers,
                body: body,
            }
            : {
                method: requestInfo.method,
                headers: headers,
            });
        if (response.status >= 200 && response.status < 400) {
            console.log(`KEPTN: Ok! Action: '${request}', Statue code: '${response.status}'`);
        }
        else if (response.status === 404) {
            console.log(`KEPTN: Warning! Action: '${request}', Request URL '${url}', Status code: '${response.status}'. Probably resource doesn't exist`);
        }
        else {
            console.log(`KEPTN: Error! Action: '${request}', Request URL: '${url}', Method: '${requestInfo.method}', Body: '${body}', Status code: '${response.status}', Response: '${response}'`);
            throw new Error();
        }
        const text = await response.text();
        return text ? JSON.parse(text) : JSON.parse('{}');
    }
    catch (err) {
        throw new Error(`KEPTN: Error! Trace: request '${request}', URL '${url}', method '${requestInfo.method}', body '${body}'`);
    }
}
exports.sendRequest = sendRequest;
