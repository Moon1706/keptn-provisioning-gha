"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateProjectBody = exports.generateMonitorinEventBody = exports.generateServiceResourceBody = void 0;
const glob_1 = require("glob");
const fs_1 = require("fs");
const js_base64_1 = require("js-base64");
const path_1 = require("path");
function generateServiceResourceBody(workdir) {
    const resources = [];
    const files = glob_1.glob.sync('**/*', {
        cwd: workdir,
        nodir: true,
    });
    console.log(`KEPTN: Workdir: ${workdir}. Files: ${files}`);
    if (!files.length) {
        console.log(`KEPTN: Error! Files didn't find! Please check path.`);
        throw new Error();
    }
    for (const file of files) {
        resources.push({
            resourceContent: (0, js_base64_1.encode)((0, fs_1.readFileSync)((0, path_1.join)(workdir, file), 'utf8')),
            resourceURI: `/${file}`,
        });
    }
    const body = JSON.stringify({ resources: resources });
    return body;
}
exports.generateServiceResourceBody = generateServiceResourceBody;
function generateMonitorinEventBody(project, service, type) {
    return `{
  "data": {
    "project": "${project}",
    "service":  "${service}",
    "type": "${type}"
  },
  "source": "js",
  "specversion": "1.0",
  "type": "sh.keptn.event.monitoring.configure",
  "shkeptnspecversion": "0.2.3"
}`;
}
exports.generateMonitorinEventBody = generateMonitorinEventBody;
function generateProjectBody(project) {
    return `{
  "gitCredentials": {
    "https": {
      "insecureSkipTLS": false,
      "token": "${project.github.token}"
    },
    "remoteURL": "${project.github.url}/${project.github.owner}/${project.github.repo}",
    "user": "${project.github.user}"
  },
  "name": "${project.name}",
  "shipyard": "${(0, js_base64_1.encode)((0, fs_1.readFileSync)(project.shipyardPath, 'utf8'))}"
}`;
}
exports.generateProjectBody = generateProjectBody;
